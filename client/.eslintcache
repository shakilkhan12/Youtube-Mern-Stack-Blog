[{"E:\\mernBlog\\client\\src\\index.js":"1","E:\\mernBlog\\client\\src\\reportWebVitals.js":"2","E:\\mernBlog\\client\\src\\App.js":"3","E:\\mernBlog\\client\\src\\components\\auth\\Register.js":"4","E:\\mernBlog\\client\\src\\components\\auth\\Login.js":"5","E:\\mernBlog\\client\\src\\components\\Home.js":"6","E:\\mernBlog\\client\\src\\components\\Navbar.js":"7","E:\\mernBlog\\client\\src\\components\\auth\\BgImage.js":"8","E:\\mernBlog\\client\\src\\store\\index.js":"9","E:\\mernBlog\\client\\src\\store\\reducers\\AuthReducer.js":"10","E:\\mernBlog\\client\\src\\store\\asyncMethods\\AuthMethods.js":"11","E:\\mernBlog\\client\\src\\components\\Dashboard.js":"12","E:\\mernBlog\\client\\src\\store\\types\\UserTypes.js":"13","E:\\mernBlog\\client\\src\\private\\PrivateRoute.js":"14","E:\\mernBlog\\client\\src\\private\\RouteLinks.js":"15","E:\\mernBlog\\client\\src\\components\\NotFound.js":"16","E:\\mernBlog\\client\\src\\components\\Create.js":"17","E:\\mernBlog\\client\\src\\store\\reducers\\PostReducer.js":"18","E:\\mernBlog\\client\\src\\store\\asyncMethods\\PostMethods.js":"19","E:\\mernBlog\\client\\src\\store\\types\\PostTypes.js":"20","E:\\mernBlog\\client\\src\\components\\Loader.js":"21","E:\\mernBlog\\client\\src\\components\\Sidebar.js":"22","E:\\mernBlog\\client\\src\\components\\Pagination.js":"23","E:\\mernBlog\\client\\src\\components\\Edit.js":"24","E:\\mernBlog\\client\\src\\components\\EditImage.js":"25","E:\\mernBlog\\client\\src\\components\\UpdateName.js":"26","E:\\mernBlog\\client\\src\\store\\reducers\\ProfileReducer.js":"27","E:\\mernBlog\\client\\src\\store\\asyncMethods\\ProfileMethods.js":"28","E:\\mernBlog\\client\\src\\store\\types\\ProfileTypes.js":"29"},{"size":473,"mtime":1608189151899,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1422,"mtime":1614852748532,"results":"33","hashOfConfig":"31"},{"size":2674,"mtime":1610252407581,"results":"34","hashOfConfig":"31"},{"size":2321,"mtime":1610604315752,"results":"35","hashOfConfig":"31"},{"size":290,"mtime":1610427168702,"results":"36","hashOfConfig":"31"},{"size":1123,"mtime":1613026568619,"results":"37","hashOfConfig":"31"},{"size":96,"mtime":1608708212687,"results":"38","hashOfConfig":"31"},{"size":715,"mtime":1614853570854,"results":"39","hashOfConfig":"31"},{"size":1558,"mtime":1613024789336,"results":"40","hashOfConfig":"31"},{"size":1287,"mtime":1610604934146,"results":"41","hashOfConfig":"31"},{"size":3355,"mtime":1615997489795,"results":"42","hashOfConfig":"31"},{"size":254,"mtime":1615544642652,"results":"43","hashOfConfig":"31"},{"size":366,"mtime":1610270565369,"results":"44","hashOfConfig":"31"},{"size":366,"mtime":1610252336071,"results":"45","hashOfConfig":"31"},{"size":489,"mtime":1610436628175,"results":"46","hashOfConfig":"31"},{"size":5550,"mtime":1612243578942,"results":"47","hashOfConfig":"31"},{"size":2606,"mtime":1614151921786,"results":"48","hashOfConfig":"31"},{"size":3630,"mtime":1614152120020,"results":"49","hashOfConfig":"31"},{"size":860,"mtime":1614151851392,"results":"50","hashOfConfig":"31"},{"size":169,"mtime":1612681545341,"results":"51","hashOfConfig":"31"},{"size":404,"mtime":1614852763985,"results":"52","hashOfConfig":"31"},{"size":1227,"mtime":1614595922777,"results":"53","hashOfConfig":"31"},{"size":3923,"mtime":1614143916414,"results":"54","hashOfConfig":"31"},{"size":2836,"mtime":1614152079696,"results":"55","hashOfConfig":"31"},{"size":2365,"mtime":1615609279033,"results":"56","hashOfConfig":"31"},{"size":462,"mtime":1615608348737,"results":"57","hashOfConfig":"31"},{"size":1065,"mtime":1615609541231,"results":"58","hashOfConfig":"31"},{"size":118,"mtime":1615608815847,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1spp8va",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"E:\\mernBlog\\client\\src\\index.js",[],["127","128"],"E:\\mernBlog\\client\\src\\reportWebVitals.js",[],"E:\\mernBlog\\client\\src\\App.js",[],"E:\\mernBlog\\client\\src\\components\\auth\\Register.js",[],"E:\\mernBlog\\client\\src\\components\\auth\\Login.js",[],"E:\\mernBlog\\client\\src\\components\\Home.js",[],"E:\\mernBlog\\client\\src\\components\\Navbar.js",[],"E:\\mernBlog\\client\\src\\components\\auth\\BgImage.js",[],"E:\\mernBlog\\client\\src\\store\\index.js",[],"E:\\mernBlog\\client\\src\\store\\reducers\\AuthReducer.js",[],"E:\\mernBlog\\client\\src\\store\\asyncMethods\\AuthMethods.js",[],"E:\\mernBlog\\client\\src\\components\\Dashboard.js",["129","130"],"E:\\mernBlog\\client\\src\\store\\types\\UserTypes.js",[],"E:\\mernBlog\\client\\src\\private\\PrivateRoute.js",[],"E:\\mernBlog\\client\\src\\private\\RouteLinks.js",[],"E:\\mernBlog\\client\\src\\components\\NotFound.js",[],"E:\\mernBlog\\client\\src\\components\\Create.js",["131","132"],"import { useState, useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { createAction } from '../store/asyncMethods/PostMethods';\r\n\r\nconst Create = (props) => {\r\n\tconst { createErrors, redirect } = useSelector((state) => state.PostReducer);\r\n\tconst [currentImage, setCurrentImage] = useState('Choose image');\r\n\tconst [imagePreview, setImagePreview] = useState('');\r\n\tconst dispatch = useDispatch();\r\n\tconst {\r\n\t\tuser: { _id, name },\r\n\t} = useSelector((state) => state.AuthReducer);\r\n\tconst fileHandle = (e) => {\r\n\t\tif (e.target.files.length !== 0) {\r\n\t\t\tsetCurrentImage(e.target.files[0].name);\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\t[e.target.name]: e.target.files[0],\r\n\t\t\t});\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetImagePreview(reader.result);\r\n\t\t\t};\r\n\t\t\treader.readAsDataURL(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\tconst [state, setState] = useState({\r\n\t\ttitle: '',\r\n\t\tdescription: '',\r\n\t\timage: '',\r\n\t});\r\n\tconst handleDescription = (e) => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\tconst [slug, setSlug] = useState('');\r\n\tconst [slugButton, setSlugButton] = useState(false);\r\n\tconst slugHandle = (e) => {\r\n\t\tsetSlugButton(true);\r\n\t\tsetSlug(e.target.value);\r\n\t};\r\n\tconst handleURL = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetSlug(slug.trim().split(' ').join('-'));\r\n\t};\r\n\tconst handleInput = (e) => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t\tconst createSlug = e.target.value.trim().split(' ').join('-');\r\n\t\tsetSlug(createSlug);\r\n\t};\r\n\tconst [value, setValue] = useState('');\r\n\tconst createPost = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst { title, description, image } = state;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('title', title);\r\n\t\tformData.append('body', value);\r\n\t\tformData.append('image', image);\r\n\t\tformData.append('description', description);\r\n\t\tformData.append('slug', slug);\r\n\t\tformData.append('name', name);\r\n\t\tformData.append('id', _id);\r\n\t\tdispatch(createAction(formData));\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (redirect) {\r\n\t\t\tprops.history.push('/dashboard');\r\n\t\t}\r\n\t\tif (createErrors.length !== 0) {\r\n\t\t\tcreateErrors.map((err) => toast.error(err.msg));\r\n\t\t}\r\n\t}, [createErrors, redirect]);\r\n\r\n\treturn (\r\n\t\t<div className='create mt-100'>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Create new post</title>\r\n\t\t\t\t<meta name='description' content='Create a new post' />\r\n\t\t\t</Helmet>\r\n\t\t\t<Toaster\r\n\t\t\t\tposition='top-right'\r\n\t\t\t\treverseOrder={false}\r\n\t\t\t\ttoastOptions={{\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfontSize: '14px',\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<form onSubmit={createPost}>\r\n\t\t\t\t\t<div className='row ml-minus-15 mr-minus-15'>\r\n\t\t\t\t\t\t<div className='col-6 p-15'>\r\n\t\t\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t\t\t<h3 className='card__h3'>Create a new post</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='title'>Post Title</label>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\tid='title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={state.title}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post title...'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='image' className='image__label'>\r\n\t\t\t\t\t\t\t\t\t\t{currentImage}\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\t\tname='image'\r\n\t\t\t\t\t\t\t\t\t\tid='image'\r\n\t\t\t\t\t\t\t\t\t\tonChange={fileHandle}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='body'>Post body</label>\r\n\t\t\t\t\t\t\t\t\t<ReactQuill\r\n\t\t\t\t\t\t\t\t\t\ttheme='snow'\r\n\t\t\t\t\t\t\t\t\t\tid='body'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post body...'\r\n\t\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Meta Description</label>\r\n\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tid='description'\r\n\t\t\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\t\t\trows='10'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={state.description}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleDescription}\r\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='meta description...'\r\n\t\t\t\t\t\t\t\t\t\tmaxLength='150'></textarea>\r\n\t\t\t\t\t\t\t\t\t<p className='length'>\r\n\t\t\t\t\t\t\t\t\t\t{state.description ? state.description.length : 0}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-6 p-15'>\r\n\t\t\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='slug'>Post URL</label>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='slug'\r\n\t\t\t\t\t\t\t\t\t\tid='slug'\r\n\t\t\t\t\t\t\t\t\t\tvalue={slug}\r\n\t\t\t\t\t\t\t\t\t\tonChange={slugHandle}\r\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post URL...'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t{slugButton ? (\r\n\t\t\t\t\t\t\t\t\t\t<button class='btn btn-default' onClick={handleURL}>\r\n\t\t\t\t\t\t\t\t\t\t\tUpdate Slug\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<div className='imagePreivew'>\r\n\t\t\t\t\t\t\t\t\t\t{imagePreview ? <img src={imagePreview} /> : ''}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\tvalue='Create post'\r\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Create;\r\n","E:\\mernBlog\\client\\src\\store\\reducers\\PostReducer.js",["133"],"import {\r\n\tSET_LOADER,\r\n\tCLOSE_LOADER,\r\n\tCREATE_ERRORS,\r\n\tREMOVE_ERRORS,\r\n\tREDIRECT_TRUE,\r\n\tREDIRECT_FALSE,\r\n\tSET_MESSAGE,\r\n\tREMOVE_MESSAGE,\r\n\tSET_POSTS,\r\n\tSET_POST,\r\n\tPOST_REQUEST,\r\n\tPOST_RESET,\r\n\tRESET_UPDATE,\r\n\tSET_UPDATE_ERRORS,\r\n\tRESET_UPDATE_ERRORS,\r\n\tUPDATE_IMAGE_ERROR,\r\n\tRESET_UPDATE_IMAGE_ERRORS,\r\n} from '../types/PostTypes';\r\nconst initState = {\r\n\tloading: false,\r\n\tcreateErrors: [],\r\n\tredirect: false,\r\n\tmessage: '',\r\n\tposts: [],\r\n\tperPage: 0,\r\n\tcount: 0,\r\n\tpost: {},\r\n\tpostStatus: false,\r\n\teditErrors: [],\r\n\tupdateImageErrors: [],\r\n};\r\nexport const PostReducer = (state = initState, action) => {\r\n\tconst { type, payload } = action;\r\n\tif (type === SET_LOADER) {\r\n\t\treturn { ...state, loading: true };\r\n\t} else if (type === CLOSE_LOADER) {\r\n\t\treturn { ...state, loading: false };\r\n\t} else if (type === CREATE_ERRORS) {\r\n\t\treturn { ...state, createErrors: payload };\r\n\t} else if (type === REDIRECT_TRUE) {\r\n\t\treturn { ...state, redirect: true };\r\n\t} else if (type === REDIRECT_FALSE) {\r\n\t\treturn { ...state, redirect: false };\r\n\t} else if (type === SET_MESSAGE) {\r\n\t\treturn { ...state, message: action.payload };\r\n\t} else if (type === REMOVE_MESSAGE) {\r\n\t\treturn { ...state, message: '' };\r\n\t} else if (type === REMOVE_ERRORS) {\r\n\t\treturn { ...state, createErrors: [] };\r\n\t} else {\r\n\t\treturn state;\r\n\t}\r\n};\r\nexport const FetchPosts = (state = initState, action) => {\r\n\tconst { type, payload } = action;\r\n\tif (type === SET_POSTS) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tposts: payload.response,\r\n\t\t\tcount: payload.count,\r\n\t\t\tperPage: payload.perPage,\r\n\t\t};\r\n\t} else {\r\n\t\treturn state;\r\n\t}\r\n};\r\nexport const FetchPost = (state = initState, action) => {\r\n\tconst { type, payload } = action;\r\n\tif (type === SET_POST) {\r\n\t\treturn { ...state, post: payload };\r\n\t} else if (type === POST_REQUEST) {\r\n\t\treturn { ...state, postStatus: true };\r\n\t} else if (type === POST_RESET) {\r\n\t\treturn { ...state, postStatus: false };\r\n\t} else {\r\n\t\treturn state;\r\n\t}\r\n};\r\nexport const UpdatePost = (state = initState, action) => {\r\n\tconst { type, payload } = action;\r\n\tif (type === SET_UPDATE_ERRORS) {\r\n\t\treturn { ...state, editErrors: payload };\r\n\t} else if (type === RESET_UPDATE_ERRORS) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\teditErrors: [],\r\n\t\t};\r\n\t} else {\r\n\t\treturn state;\r\n\t}\r\n};\r\nexport const UpdateImage = (state = initState, action) => {\r\n\tconst { payload, type } = action;\r\n\tif (type === UPDATE_IMAGE_ERROR) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tupdateImageErrors: payload,\r\n\t\t};\r\n\t} else if (type === RESET_UPDATE_IMAGE_ERRORS) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tupdateImageErrors: [],\r\n\t\t};\r\n\t} else {\r\n\t\treturn state;\r\n\t}\r\n};\r\n","E:\\mernBlog\\client\\src\\store\\asyncMethods\\PostMethods.js",["134","135","136"],"import axios from 'axios';\r\nimport {\r\n\tCREATE_ERRORS,\r\n\tREMOVE_ERRORS,\r\n\tSET_LOADER,\r\n\tCLOSE_LOADER,\r\n\tREDIRECT_TRUE,\r\n\tREDIRECT_FALSE,\r\n\tSET_MESSAGE,\r\n\tREMOVE_MESSAGE,\r\n\tSET_POSTS,\r\n\tSET_POST,\r\n\tPOST_REQUEST,\r\n\tEDIT_ERRORS,\r\n\tSET_UPDATE_ERRORS,\r\n\tUPDATE_IMAGE_ERROR,\r\n} from '../types/PostTypes';\r\n\r\nexport const createAction = (postData) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst {\r\n\t\t\tAuthReducer: { token },\r\n\t\t} = getState();\r\n\t\tdispatch({ type: SET_LOADER });\r\n\t\ttry {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\tconst {\r\n\t\t\t\tdata: { msg },\r\n\t\t\t} = await axios.post('/create_post', postData, config);\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tdispatch({ type: REMOVE_ERRORS });\r\n\t\t\tdispatch({ type: REDIRECT_TRUE });\r\n\t\t\tdispatch({ type: SET_MESSAGE, payload: msg });\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.response);\r\n\t\t\tconst { errors } = error.response.data;\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tdispatch({ type: CREATE_ERRORS, payload: errors });\r\n\t\t}\r\n\t};\r\n};\r\nexport const fetchPosts = (id, page) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst {\r\n\t\t\tAuthReducer: { token },\r\n\t\t} = getState();\r\n\t\tdispatch({ type: SET_LOADER });\r\n\t\ttry {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\tconst {\r\n\t\t\t\tdata: { response, count, perPage },\r\n\t\t\t} = await axios.get(`/posts/${id}/${page}`, config);\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tdispatch({ type: SET_POSTS, payload: { response, count, perPage } });\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t}\r\n\t};\r\n};\r\nexport const fetchPost = (id) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst {\r\n\t\t\tAuthReducer: { token },\r\n\t\t} = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t};\r\n\t\tdispatch({ type: SET_LOADER });\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: { post },\r\n\t\t\t} = await axios.get(`/post/${id}`, config);\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tdispatch({ type: SET_POST, payload: post });\r\n\t\t\tdispatch({ type: POST_REQUEST });\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tconsole.log(error.message);\r\n\t\t}\r\n\t};\r\n};\r\nexport const updateAction = (editData) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst {\r\n\t\t\tAuthReducer: { token },\r\n\t\t} = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t};\r\n\t\tdispatch({ type: SET_LOADER });\r\n\t\ttry {\r\n\t\t\tconst { data } = await axios.post('/update', editData, config);\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tdispatch({ type: REDIRECT_TRUE });\r\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg });\r\n\t\t} catch (error) {\r\n\t\t\tconst {\r\n\t\t\t\tresponse: {\r\n\t\t\t\t\tdata: { errors },\r\n\t\t\t\t},\r\n\t\t\t} = error;\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tdispatch({ type: SET_UPDATE_ERRORS, payload: errors });\r\n\t\t\tconsole.log(error.response);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const updateImageAction = (updateData) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst {\r\n\t\t\tAuthReducer: { token },\r\n\t\t} = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t};\r\n\t\tdispatch({ type: SET_LOADER });\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: { msg },\r\n\t\t\t} = await axios.post('/updateImage', updateData, config);\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tdispatch({ type: REDIRECT_TRUE });\r\n\t\t\tdispatch({ type: SET_MESSAGE, payload: msg });\r\n\t\t} catch (error) {\r\n\t\t\tconst {\r\n\t\t\t\tresponse: {\r\n\t\t\t\t\tdata: { errors },\r\n\t\t\t\t},\r\n\t\t\t} = error;\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tdispatch({ type: UPDATE_IMAGE_ERROR, payload: errors });\r\n\t\t}\r\n\t};\r\n};\r\n","E:\\mernBlog\\client\\src\\store\\types\\PostTypes.js",[],"E:\\mernBlog\\client\\src\\components\\Loader.js",[],"E:\\mernBlog\\client\\src\\components\\Sidebar.js",[],"E:\\mernBlog\\client\\src\\components\\Pagination.js",["137"],"import { Link } from 'react-router-dom';\r\nimport { BsChevronDoubleRight, BsChevronDoubleLeft } from 'react-icons/bs';\r\nconst Pagination = ({ count, page, perPage }) => {\r\n\tlet totalPages = Math.ceil(count / perPage);\r\n\tlet startLoop = page;\r\n\tlet diff = totalPages - page;\r\n\tif (diff <= 3) {\r\n\t\tstartLoop = totalPages - 3;\r\n\t}\r\n\tlet endLoop = startLoop + 3;\r\n\tif (startLoop <= 0) {\r\n\t\tstartLoop = 1;\r\n\t}\r\n\tconst links = () => {\r\n\t\tconst store = [];\r\n\r\n\t\tfor (let i = startLoop; i <= endLoop; i++) {\r\n\t\t\tstore.push(\r\n\t\t\t\t<li key={i} className={i == page ? 'active' : ''}>\r\n\t\t\t\t\t<Link to={`/dashboard/${i}`}>{i}</Link>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn store;\r\n\t};\r\n\tconst next = () => {\r\n\t\tif (page < totalPages) {\r\n\t\t\treturn (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to={`/dashboard/${parseInt(page) + 1}`}>\r\n\t\t\t\t\t\t<BsChevronDoubleRight />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\tconst prev = () => {\r\n\t\tif (page > 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to={`/dashboard/${parseInt(page - 1)}`}>\r\n\t\t\t\t\t\t<BsChevronDoubleLeft />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn totalPages && count > 3 ? (\r\n\t\t<div className='pagination'>\r\n\t\t\t{prev()}\r\n\t\t\t{links()}\r\n\t\t\t{next()}\r\n\t\t</div>\r\n\t) : (\r\n\t\t''\r\n\t);\r\n};\r\nexport default Pagination;\r\n","E:\\mernBlog\\client\\src\\components\\Edit.js",["138","139","140","141"],"import { useState, useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPost, updateAction } from '../store/asyncMethods/PostMethods';\r\nimport {\r\n\tPOST_RESET,\r\n\tRESET_UPDATE,\r\n\tRESET_UPDATE_ERRORS,\r\n} from '../store/types/PostTypes';\r\nimport Loader from './Loader';\r\nconst Edit = () => {\r\n\tconst { push } = useHistory();\r\n\tconst { id } = useParams();\r\n\tconst [value, setValue] = useState('');\r\n\tconst [state, setState] = useState({\r\n\t\ttitle: '',\r\n\t\tdescription: '',\r\n\t});\r\n\tconst dispatch = useDispatch();\r\n\tconst { loading, redirect } = useSelector((state) => state.PostReducer);\r\n\tconst { post, postStatus } = useSelector((state) => state.FetchPost);\r\n\tconst { editErrors } = useSelector((state) => state.UpdatePost);\r\n\tuseEffect(() => {\r\n\t\tif (postStatus) {\r\n\t\t\tsetState({\r\n\t\t\t\ttitle: post.title,\r\n\t\t\t\tdescription: post.description,\r\n\t\t\t});\r\n\t\t\tsetValue(post.body);\r\n\t\t\tdispatch({ type: POST_RESET });\r\n\t\t} else {\r\n\t\t\tdispatch(fetchPost(id));\r\n\t\t}\r\n\t}, [post]);\r\n\tconst updatePost = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(\r\n\t\t\tupdateAction({\r\n\t\t\t\ttitle: state.title,\r\n\t\t\t\tbody: value,\r\n\t\t\t\tdescription: state.description,\r\n\t\t\t\tid: post._id,\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (editErrors.length !== 0) {\r\n\t\t\teditErrors.map((error) => toast.error(error.msg));\r\n\t\t\tdispatch({ type: RESET_UPDATE_ERRORS });\r\n\t\t}\r\n\t}, [editErrors]);\r\n\tuseEffect(() => {\r\n\t\tif (redirect) {\r\n\t\t\tpush('/dashboard');\r\n\t\t}\r\n\t}, [redirect]);\r\n\treturn !loading ? (\r\n\t\t<div className='mt-100'>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Edit post</title>\r\n\t\t\t\t<meta name='description' content='update post' />\r\n\t\t\t</Helmet>\r\n\t\t\t<Toaster\r\n\t\t\t\tposition='top-right'\r\n\t\t\t\treverseOrder={false}\r\n\t\t\t\ttoastOptions={{\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfontSize: '14px',\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t\t<h3 className='card__h3'>Edit post</h3>\r\n\t\t\t\t\t\t\t<form onSubmit={updatePost}>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='title'>Post title</label>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\tid='title'\r\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={state.title}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetState({ ...state, title: e.target.value })\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='body'>Post body</label>\r\n\t\t\t\t\t\t\t\t\t<ReactQuill\r\n\t\t\t\t\t\t\t\t\t\ttheme='snow'\r\n\t\t\t\t\t\t\t\t\t\tid='body'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post body...'\r\n\t\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\t\tonChange={setValue}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Meta Description</label>\r\n\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tid='description'\r\n\t\t\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\t\t\trows='10'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={state.description}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetState({ ...state, description: e.target.value })\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonKeyUp={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetState({ ...state, description: e.target.value })\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='meta description...'\r\n\t\t\t\t\t\t\t\t\t\tmaxLength='150'></textarea>\r\n\t\t\t\t\t\t\t\t\t<p className='length'>\r\n\t\t\t\t\t\t\t\t\t\t{state.description ? state.description.length : 0}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\tvalue='Edit'\r\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<Loader />\r\n\t);\r\n};\r\nexport default Edit;\r\n","E:\\mernBlog\\client\\src\\components\\EditImage.js",["142","143","144"],"import { Helmet } from 'react-helmet';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { updateImageAction } from '../store/asyncMethods/PostMethods';\r\nimport { RESET_UPDATE_IMAGE_ERRORS } from '../store/types/PostTypes';\r\nconst EditImage = () => {\r\n\tconst { id } = useParams();\r\n\tconst { push } = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tconst { updateImageErrors } = useSelector((state) => state.UpdateImage);\r\n\tconst { redirect } = useSelector((state) => state.PostReducer);\r\n\tconst [state, setState] = useState({\r\n\t\timage: '',\r\n\t\timagePreview: '',\r\n\t\timageName: 'Choose image',\r\n\t});\r\n\tconst fileHandle = (e) => {\r\n\t\tif (e.target.files.length !== 0) {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\timagePreview: reader.result,\r\n\t\t\t\t\timage: e.target.files[0],\r\n\t\t\t\t\timageName: e.target.files[0].name,\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\treader.readAsDataURL(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\tconst updateImage = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('id', id);\r\n\t\tformData.append('image', state.image);\r\n\t\tdispatch(updateImageAction(formData));\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (updateImageErrors.length !== 0) {\r\n\t\t\tupdateImageErrors.map((error) => toast.error(error.msg));\r\n\t\t\tdispatch({ type: RESET_UPDATE_IMAGE_ERRORS });\r\n\t\t}\r\n\t}, [updateImageErrors]);\r\n\tuseEffect(() => {\r\n\t\tif (redirect) {\r\n\t\t\tpush('/dashboard');\r\n\t\t}\r\n\t}, [redirect]);\r\n\treturn (\r\n\t\t<div className='container mt-100'>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Update image</title>\r\n\t\t\t\t<meta name='description' content='Update image' />\r\n\t\t\t</Helmet>\r\n\t\t\t<Toaster\r\n\t\t\t\tposition='top-right'\r\n\t\t\t\treverseOrder={false}\r\n\t\t\t\ttoastOptions={{\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfontSize: '14px',\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t<h3 className='card__h3'>Update Post Image</h3>\r\n\t\t\t\t\t\t<form onSubmit={updateImage}>\r\n\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='image' className='image__label'>\r\n\t\t\t\t\t\t\t\t\t{state.imageName}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\tname='image'\r\n\t\t\t\t\t\t\t\t\tid='image'\r\n\t\t\t\t\t\t\t\t\tonChange={fileHandle}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t<div className='imagePreivew'>\r\n\t\t\t\t\t\t\t\t\t{state.imagePreview ? <img src={state.imagePreview} /> : ''}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\tvalue='Update image'\r\n\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default EditImage;\r\n","E:\\mernBlog\\client\\src\\components\\UpdateName.js",["145","146","147","148"],"import Helmet from 'react-helmet';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { updateNameAction } from '../store/asyncMethods/ProfileMethods';\r\nimport { RESET_PROFILE_ERRORS } from '../store/types/ProfileTypes';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst UpdateName = () => {\r\n\tconst { push } = useHistory();\r\n\tconst [userName, setUserName] = useState('');\r\n\tconst {\r\n\t\tuser: { name, _id },\r\n\t} = useSelector((user) => user.AuthReducer);\r\n\tconst { loading, redirect } = useSelector((state) => state.PostReducer);\r\n\tconst { updateErrors } = useSelector((state) => state.updateName);\r\n\tconst dispatch = useDispatch();\r\n\tconst updateNameMethod = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(updateNameAction({ name: userName, id: _id }));\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tsetUserName(name);\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (updateErrors.length !== 0) {\r\n\t\t\tupdateErrors.map((error) => toast.error(error.msg));\r\n\t\t\tdispatch({ type: RESET_PROFILE_ERRORS });\r\n\t\t}\r\n\t}, [updateErrors]);\r\n\tuseEffect(() => {\r\n\t\tif (redirect) {\r\n\t\t\tpush('/dashboard');\r\n\t\t}\r\n\t}, [redirect]);\r\n\treturn (\r\n\t\t<div className='container mt-100'>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Update Name</title>\r\n\t\t\t\t<meta name='description' content='update the user name' />\r\n\t\t\t</Helmet>\r\n\t\t\t<Toaster\r\n\t\t\t\tposition='top-right'\r\n\t\t\t\treverseOrder={false}\r\n\t\t\t\ttoastOptions={{\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfontSize: '14px',\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className='row ml-minus-15 mr-minus-15'>\r\n\t\t\t\t<div className='col-3 p-15'>\r\n\t\t\t\t\t<Sidebar />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-9 p-15'>\r\n\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t<h3 className='card__h3'>Update Name</h3>\r\n\t\t\t\t\t\t<form onSubmit={updateNameMethod}>\r\n\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tname=''\r\n\t\t\t\t\t\t\t\t\tclassName='group__control'\r\n\t\t\t\t\t\t\t\t\tplaceholder='Name...'\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\r\n\t\t\t\t\t\t\t\t\tvalue={userName}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='group'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\tvalue='Update Name'\r\n\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default UpdateName;\r\n","E:\\mernBlog\\client\\src\\store\\reducers\\ProfileReducer.js",[],"E:\\mernBlog\\client\\src\\store\\asyncMethods\\ProfileMethods.js",["149"],"import axios from 'axios';\r\nimport {\r\n\tSET_LOADER,\r\n\tCLOSE_LOADER,\r\n\tREDIRECT_TRUE,\r\n\tSET_MESSAGE,\r\n} from '../types/PostTypes';\r\nimport {\r\n\tRESET_PROFILE_ERRORS,\r\n\tSET_PROFILE_ERRORS,\r\n} from '../types/ProfileTypes';\r\nimport { SET_TOKEN } from '../types/UserTypes';\r\nexport const updateNameAction = (user) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst {\r\n\t\t\tAuthReducer: { token },\r\n\t\t} = getState();\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t};\r\n\t\tdispatch({ type: SET_LOADER });\r\n\t\ttry {\r\n\t\t\tconst { data } = await axios.post('/updateName', user, config);\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\r\n\t\t\tlocalStorage.setItem('myToken', data.token);\r\n\t\t\tdispatch({ type: SET_TOKEN, payload: data.token });\r\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg });\r\n\t\t\tdispatch({ type: REDIRECT_TRUE });\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({ type: CLOSE_LOADER });\r\n\t\t\tconsole.log(error.response.data.errors);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SET_PROFILE_ERRORS,\r\n\t\t\t\tpayload: error.response.data.errors,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n","E:\\mernBlog\\client\\src\\store\\types\\ProfileTypes.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":63,"column":5,"nodeType":"156","endLine":63,"endColumn":14,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"158","line":66,"column":5,"nodeType":"156","endLine":66,"endColumn":11,"suggestions":"159"},{"ruleId":"154","severity":1,"message":"160","line":81,"column":5,"nodeType":"156","endLine":81,"endColumn":29,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":181,"column":27,"nodeType":"164","endLine":181,"endColumn":53},{"ruleId":"165","severity":1,"message":"166","line":14,"column":2,"nodeType":"167","messageId":"168","endLine":14,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":8,"column":2,"nodeType":"167","messageId":"168","endLine":8,"endColumn":16},{"ruleId":"165","severity":1,"message":"170","line":10,"column":2,"nodeType":"167","messageId":"168","endLine":10,"endColumn":16},{"ruleId":"165","severity":1,"message":"171","line":14,"column":2,"nodeType":"167","messageId":"168","endLine":14,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":19,"column":30,"nodeType":"174","messageId":"175","endLine":19,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":11,"column":2,"nodeType":"167","messageId":"168","endLine":11,"endColumn":14},{"ruleId":"154","severity":1,"message":"176","line":38,"column":5,"nodeType":"156","endLine":38,"endColumn":11,"suggestions":"177"},{"ruleId":"154","severity":1,"message":"178","line":55,"column":5,"nodeType":"156","endLine":55,"endColumn":17,"suggestions":"179"},{"ruleId":"154","severity":1,"message":"180","line":60,"column":5,"nodeType":"156","endLine":60,"endColumn":15,"suggestions":"181"},{"ruleId":"154","severity":1,"message":"178","line":45,"column":5,"nodeType":"156","endLine":45,"endColumn":24,"suggestions":"182"},{"ruleId":"154","severity":1,"message":"180","line":50,"column":5,"nodeType":"156","endLine":50,"endColumn":15,"suggestions":"183"},{"ruleId":"162","severity":1,"message":"163","line":84,"column":32,"nodeType":"164","endLine":84,"endColumn":64},{"ruleId":"165","severity":1,"message":"184","line":16,"column":10,"nodeType":"167","messageId":"168","endLine":16,"endColumn":17},{"ruleId":"154","severity":1,"message":"185","line":25,"column":5,"nodeType":"156","endLine":25,"endColumn":7,"suggestions":"186"},{"ruleId":"154","severity":1,"message":"178","line":31,"column":5,"nodeType":"156","endLine":31,"endColumn":19,"suggestions":"187"},{"ruleId":"154","severity":1,"message":"180","line":36,"column":5,"nodeType":"156","endLine":36,"endColumn":15,"suggestions":"188"},{"ruleId":"165","severity":1,"message":"189","line":9,"column":2,"nodeType":"167","messageId":"168","endLine":9,"endColumn":22},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'redirect'. Either include them or remove the dependency array.","ArrayExpression",["192"],"React Hook useEffect has missing dependencies: '_id' and 'dispatch'. Either include them or remove the dependency array.",["193"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["194"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'RESET_UPDATE' is defined but never used.","Identifier","unusedVar","'REDIRECT_FALSE' is defined but never used.","'REMOVE_MESSAGE' is defined but never used.","'EDIT_ERRORS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'postStatus'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["196"],"React Hook useEffect has a missing dependency: 'push'. Either include it or remove the dependency array.",["197"],["198"],["199"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["200"],["201"],["202"],"'RESET_PROFILE_ERRORS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"213","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"213","fix":"222"},"Update the dependencies array to be: [dispatch, message, redirect]",{"range":"223","text":"224"},"Update the dependencies array to be: [_id, dispatch, page]",{"range":"225","text":"226"},"Update the dependencies array to be: [createErrors, props.history, redirect]",{"range":"227","text":"228"},"Update the dependencies array to be: [dispatch, id, post, postStatus]",{"range":"229","text":"230"},"Update the dependencies array to be: [dispatch, editErrors]",{"range":"231","text":"232"},"Update the dependencies array to be: [push, redirect]",{"range":"233","text":"234"},"Update the dependencies array to be: [dispatch, updateImageErrors]",{"range":"235","text":"236"},{"range":"237","text":"234"},"Update the dependencies array to be: [name]",{"range":"238","text":"239"},"Update the dependencies array to be: [dispatch, updateErrors]",{"range":"240","text":"241"},{"range":"242","text":"234"},[1782,1791],"[dispatch, message, redirect]",[1855,1861],"[_id, dispatch, page]",[2395,2419],"[createErrors, props.history, redirect]",[1229,1235],"[dispatch, id, post, postStatus]",[1604,1616],"[dispatch, editErrors]",[1692,1702],"[push, redirect]",[1510,1529],"[dispatch, updateImageErrors]",[1605,1615],[955,957],"[name]",[1129,1143],"[dispatch, updateErrors]",[1219,1229]]